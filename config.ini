[DEFAULT]
# Git对象拯救工具配置文件

[ai_models]
# AI模型配置
default_model = moonshot

[moonshot]
name = Moonshot AI
base_url = https://api.moonshot.cn/v1
model = kimi-k2-0711-preview
# API密钥可以在这里设置，或使用环境变量 MOONSHOT_API_KEY
api_key = 
env_var = MOONSHOT_API_KEY

[openai]
name = OpenAI
base_url = https://api.openai.com/v1
model = gpt-3.5-turbo
# API密钥可以在这里设置，或使用环境变量 OPENAI_API_KEY
api_key = 
env_var = OPENAI_API_KEY

[azure]
name = Azure OpenAI
base_url = 
model = gpt-35-turbo
# API密钥可以在这里设置，或使用环境变量 AZURE_OPENAI_API_KEY
api_key = 
env_var = AZURE_OPENAI_API_KEY

[analysis]
# 分析配置
max_workers = 50
max_content_length = 150000
temperature = 0.2
# 请求速率限制（每分钟最大请求数）
rpm_limit = 200
# 不同场景的内容预览长度配置
# 第一种调用：AI文件分析（判断是否有价值）
file_analysis_preview_length = 8000
# 第二种调用：批量文件分组（一次性分组所有文件）
batch_grouping_preview_length = 2000
# 第三种调用：迭代式相似文件查找
iterative_similarity_preview_length = 2000
# 第四种调用：版本分析（-1表示无限制，使用完整内容）
version_analysis_preview_length = -1
#上下文实在超出时推荐手动分组

#迭代查找其实可以并行化，但也没太大必要。并行化更快更准但是开销更大


[file_extensions]
# 文件扩展名映射
python = .py
javascript = .js
typescript = .ts
java = .java
cpp = .cpp
c = .c
html = .html
css = .css
markdown = .md
text = .txt
json = .json
yaml = .yaml
toml = .toml
ini = .ini
xml = .xml
sql = .sql
shell = .sh
batch = .bat
powershell = .ps1

[output]
# 输出配置
extract_output = extracted_objects
analyze_output = analyzed_files
grouped_output = grouped_files
organized_output = organized_files
# 版本分类输出结构
create_version_structure = true
create_group_directories = true
newest_version_dir = newest_version
old_versions_dir = old/oldversions 